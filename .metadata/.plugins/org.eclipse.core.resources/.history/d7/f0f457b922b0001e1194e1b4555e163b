package f_Chapter05;

// 객체 지향 프로그램의 '변수'

// 객체의 속성을 '변수'로 표현
// : 객체의 상태를 저장

// 필드, 지역 변수 차이
// 1. 필드 : 객체의 지속적인 상태를 저장하는 클래스 내부의 변수
// 2. 지역 변수 : 메서드가 실행되는 동안에만 존재하는 일시적인 변수

// 인스턴스 변수
// : 클래스의 각 객체(인스턴스)에 속한 변수, 각 객체마다 독립적인 값을 가짐
// : 클래스 내부에서 선언, 객체가 생성될 때 메모리에 할당

// 인스턴스 변수의 특징
// : 각 객체에 대한 고유한 값을 가짐
// : 캡슐화와 정보 은닉을 통해 보안을 유지
// : 메서드를 통해서만 접근하고 변경을 원칙

class Car{
	// 인스턴스 변수
	// : 필드(객체의 상태)
	String color;
	int speed;		// 차의 현재 속력
	String brand;
	
	// 속도를 증가 시키는 메서드
	// increment : 지역변수
	void accelerate(int increment) {
		speed += increment;
	}
	void displayInfo() {
		System.out.println("Speed : " + speed);
	}
}	
class Dog{
	// 인스턴스 변수 선언
	String name;
	int age;
	
	// 생성자
	Dog(String name, int age){
		// this.name : Dog클래스로 생성된 객체(인스턴스)의 name = 객체 생성 시의 데이터;
		// 객체의 인스턴스 변수 = "choco";
		this.name = name;
		this.age = age;
	}
	}

public class Object01 {

	public static void main(String[] args) {
		Car myCar = new Car();
		myCar.color = "white";
		myCar.brand = "hyundai";
		myCar.speed = 0;
		
		myCar.accelerate(30);
		myCar.displayInfo();

//		Dog 객체 생성
		Dog myDog = new Dog("choco", 3);
		
		myDog.age = 4;

	}

}
